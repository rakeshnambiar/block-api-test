name: API Test Workflow

on: [push, pull_request]

env:
  HOST_URL: http://localhost:8545

jobs:
  verification:
    name: Run verification tests
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: check tools
      run: |
        docker info
        python --version
        conda --version

    - name: Install and run sedge
      run: |  
        chmod +x scripts/*
        ./scripts/install-sedge.sh
        ./scripts/run-sedge.sh

    - name: Install Python libraries
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt

    - name: Run Health check
      run: |
        source venv/bin/activate
        python -m utils.healthcheck

    - name: Run Verification Tests
      run: |
        source venv/bin/activate
        export host=${{ env.HOST_URL }}
        python -m pytest -m Regression tests/verification/verification_test.py -sv --html=html-report/index.html

    - name: Archive artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
          name: verification-test-artifact
          path: |
            execution.log
            html-report

    - name: Publish HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: verification-report
        path: html-report

  performance:
    name: Run performance tests
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: check tools
      run: |
        docker info
        python --version
        conda --version  

    - name: Install Python libraries
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt    

    - name: Install and run sedge
      run: |  
        chmod +x scripts/*
        ./scripts/install-sedge.sh
        ./scripts/run-sedge.sh       

    - name: Run Health check
      run: |
        source venv/bin/activate
        python -m utils.healthcheck        

    - name: Run performance Tests
      run: |
        source venv/bin/activate
        locust --locustfile tests/performance/performance_test.py --headless --host=${{ env.HOST_URL }} \
        --tags get_block_by_number --stop-timeout 30 --html report_batch1.html \
        --print-stats --csv performancetest_batch1.csv --csv-full-history -L DEBUG --logfile performancetest_batch1.log
        locust --locustfile tests/performance/performance_test.py --headless --host=${{ env.HOST_URL }} \
        --tags get_block_by_hash --stop-timeout 30 --html report_batch2.html \
        --print-stats --csv performancetest_batch2.csv --csv-full-history -L DEBUG --logfile performancetest_batch2.log

    - name: Archive artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
          name: performance-test-artifact
          path: |
            performancetest_*
            report_batch1.html
            report_batch2.html

    - name: Publish HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: performance-report
        path: |
          report_batch1.html
          report_batch2.html